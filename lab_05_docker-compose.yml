version: '3.2'
services:
  lab_05_user:
    tty: true
    container_name: lab_05_user
    build:
      context: .
      dockerfile: lab_05_dockerfile
    environment:
      - DB_HOST=lab05_postgres
      - DB_PORT=5432
      - DB_LOGIN=stud
      - DB_PASSWORD=stud
      - DB_DATABASE=archdb
      - MONGO_HOST=mongodb_lab5
      - MONGO_PORT=27017
      - MONGO_DATABASE=arch
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 8080:8080
    networks:
      - lab05-network
  lab_05_trips:
    tty: true
    container_name: lab_05_trips
    build:
      context: .
      dockerfile: lab_05_dockerfile
    environment:
      - DB_HOST=lab05_postgres
      - DB_PORT=5432
      - DB_LOGIN=stud
      - DB_PASSWORD=stud
      - DB_DATABASE=archdb
      - MONGO_HOST=mongodb_lab5
      - MONGO_PORT=27017
      - MONGO_DATABASE=arch
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 8081:8080
    networks:
      - lab05-network

  lab_05_gateway:
    tty: true
    container_name: lab_05_gateway
    build:
      context: .
      dockerfile: lab_05_gateway_dockerfile
    environment:
      - DB_HOST=lab05_postgres
      - DB_PORT=5432
      - DB_LOGIN=stud
      - DB_PASSWORD=stud
      - DB_DATABASE=archdb
      - MONGO_HOST=mongodb_lab5
      - MONGO_PORT=27017
      - MONGO_DATABASE=arch
      - JWT_KEY=0123456789ABCDEF0123456789ABCDEF
      - CACHE=cache_lab05:6379
      - USER_ADDRESS=http://lab_05_user:8080
      - DATA_ADDRESS=http://lab_05_trips:8080
    depends_on:
      db:
        condition: service_healthy
      mongodb_lab5:
        condition: service_healthy
    ports:
      - 8888:8888
    networks:
      - lab05-network

  db:
    container_name: lab05_postgres
    image: postgres:15
    environment:
      - POSTGRES_USER=stud
      - POSTGRES_PASSWORD=stud
      - PGDATA=/data/postgres
      - POSTGRES_DB=archdb
    volumes:
      - lab05_db:/data/postgres
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d postgres" ]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - lab05-network
  mongodb_lab5:
    image: mongo:5.0
    container_name: mongodb_lab5
    restart: on-failure
    networks:
      - lab05-network
    volumes:
      - mongodbdata_lab5:/data/db
      - ./mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro
    ports:
      - '27017:27017'
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet

volumes:
  lab05_db:
  mongodbdata_lab5:


networks:
  lab05-network:
    driver: "bridge"
    external: false